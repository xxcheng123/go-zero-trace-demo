// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package user

import (
	"context"

	"go-zero-trace-demo/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	RandErrorReq     = pb.RandErrorReq
	RandErrorResp    = pb.RandErrorResp
	RandSentenceReq  = pb.RandSentenceReq
	RandSentenceResp = pb.RandSentenceResp

	User interface {
		RandSentence(ctx context.Context, in *RandSentenceReq, opts ...grpc.CallOption) (*RandSentenceResp, error)
		RandError(ctx context.Context, in *RandErrorReq, opts ...grpc.CallOption) (*RandErrorResp, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) RandSentence(ctx context.Context, in *RandSentenceReq, opts ...grpc.CallOption) (*RandSentenceResp, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.RandSentence(ctx, in, opts...)
}

func (m *defaultUser) RandError(ctx context.Context, in *RandErrorReq, opts ...grpc.CallOption) (*RandErrorResp, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.RandError(ctx, in, opts...)
}
